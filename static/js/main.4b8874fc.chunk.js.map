{"version":3,"sources":["redux/dialogsReduser.js","redux/usersReduser.js","components/Profile/MyPosts/Post/Post.module.css","components/Login/Login.module.css","components/Navbar/Friends/Friends.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/profileReduser.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/authReduser.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/appReduser.js","components/Initialisation/Initialisation.jsx","components/HOCs/SuspenseHOC.jsx","App.js","reportWebVitals.js","redux/sidebarReduser.js","redux/REDUX_STORE.js","index.js","utils/validators/VALIDATORS.js","components/common/FormControls/FormControls.jsx","components/Navbar/Navbar.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/common/FormControls/FormControls.module.css","redux/SELECRORS.js","components/Header/Header.module.css","components/HOCs/AuthHOC.jsx","API/API.js"],"names":["initialState","messagesData","id","msg","dialogsData","name","fake","addCommentAC","currentMsg","type","dialogsReduser","state","action","users","currentPageUsers","totalCount","usersPerPage","amountOfPages","currentPage","showLoader","followingInProgressID","visiblePages","usersReduser","map","el","userId","followed","buffer","i","push","shouldShowLoader","followingInProgress","setUsers","setCurrentPageUsers","setUsersAmount","amount","setPagesAmount","setCurrentPage","number","setVisiblePagesAC","arr","getUsersThunkCreator","dispatch","a","usersAPI","getUsers","data","items","Math","ceil","setCurrentPageThunkCreator","pageNumber","page","isNaN","followThunkCreator","follow","resultCode","unfollowThunkCreator","unFollow","module","exports","Friends","props","fio","Navbar","friendsList","friends","navList","links","className","classes","nav__link","to","src","activeClassName","active_link","nav","NavbarContainer","connect","sidebarFriendsSL","sidebarLinksSL","React","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","console","log","onChange","e","target","value","onBlur","updateStatus","onDoubleClick","ProfileInfo","content__header","content__avatar","photos","small","content__author","fullName","aboutMe","contacts","vk","updateStatusTK","getStatus","getStatusTK","Post","MyPosts","memo","postsElements","content__add_post","content__wall","MyPostsFormContainer","onSubmit","obj","addPost","textareaData","lengthValidator","maxLengthTC","reduxForm","form","fields","handleSubmit","validate","required","component","Textarea","placeholder","profileInfo","currentUserId","postsData","likesCount","setProfileInfo","userID","profileAPI","response","profileReduser","currentInputData","filter","index","postId","setImage","file","MyPostsContainer","profilePostsDataSL","addPostAC","setUserPhoto","ProfileContainer","this","match","params","USER_ID","profileDidMountThunkCreator","isAuthorised","compose","withRouter","profileInfoSL","profileStatusSL","authAPI","authMe","res","getProfileInfo","res2","withAuthRedirect","Header","authData","login","header","alt","isAuth","loginBlock","onClick","logoutMeTC","email","isFetching","authStatus","setAuthStatus","setAuthUserData","authReduser","HeaderContainer","authMeThunkCreator","userIdSL","isAuthSL","authDataSL","logoutMe","ReduxLoginForm","Input","error","c","formSummaryError","LoginContainer","authStatusSL","tryToLoginTC","password","rememberMe","setTimeout","tryToLogin","stopSubmit","_error","messages","isUserAuthorised","userStatus","setAuthorisationStatusAC","appReduser","Initialisation","checkUserAuthorisationTC","userStatusSL","res3","SuspenseHOC","Comp","fallback","DialogsContainer","lazy","TestComp","UsersContainer","App","path","render","basename","process","renderContent","AppContainer","app","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReduser","redusers","combineReducers","profilePage","messagesPage","sidebarPage","auth","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","StrictMode","document","getElementById","length","FormControl","input","meta","hasError","touched","error_textaera","textarea","children","error_span","restProps","totalCountSL","usersPerPageSL","amountOfPagesSL","currentPageSL","currentPageUsersSL","showLoaderSL","followingInProgressIDSL","visiblePagesSL","usersGetSuperSL","createSelector","mapStateToPropsAuth","WrapperContainer","axiosInstance","axios","create","withCredentials","baseURL","headers","get","post","delete","put","image"],"mappings":"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","file":"static/js/main.4b8874fc.chunk.js","sourcesContent":["\r\n\r\n\r\nlet initialState = {\r\n  messagesData: [\r\n    { id: 1, msg: \"Привет\" },\r\n    { id: 2, msg: \"Тестовые сообщения\" },\r\n    { id: 3, msg: \"Напиши что нибудь в чат\" },\r\n    { id: 4, msg: \"Лорем ипусм\" },\r\n  ],\r\n  dialogsData: [\r\n    { id: 1, name: \"Евгений\" },\r\n    { id: 2, name: \"Дмитрий\" },\r\n    { id: 3, name: \"Валера\" },\r\n    { id: 4, name: \"Светлана\" },\r\n    { id: 5, name: \"Настя\" },\r\n  ],\r\n\r\n  fake: 0,\r\n};\r\n\r\nconst dialogsReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case \"ADD-COMMENT\":\r\n      debugger;\r\n      return {\r\n        ...state,\r\n        messagesData: [...state.messagesData, { id: 5, msg: action.currentMsg }],\r\n      };\r\n    case \"FAKE\":\r\n      return {\r\n        ...state,\r\n        fake: action.fake\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addCommentAC = (currentMsg) => ({ type: \"ADD-COMMENT\", currentMsg});\r\nexport const fakeAC = (fake) => ({ type: \"FAKE\", fake});\r\nexport default dialogsReduser;\r\n","\r\nimport { usersAPI } from \"../API/API\";\r\n\r\nlet initialState = {\r\n  users: [],\r\n  currentPageUsers: [],\r\n  totalCount: 10,\r\n  usersPerPage: 100,\r\n  amountOfPages: [1],\r\n  currentPage: 1,\r\n\r\n  showLoader: false,\r\n  followingInProgressID: null,\r\n\r\n  visiblePages: []\r\n};\r\n\r\nexport let usersReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FOLLOW\":\r\n      return {\r\n        ...state,\r\n        users: state.users.map((el) => {\r\n          if (el.id === action.userId) {\r\n            return { ...el, followed: true };\r\n          } else {\r\n            return el;\r\n          }\r\n        }),\r\n      };\r\n\r\n    case \"UNFOLLOW\":\r\n      return {\r\n        ...state,\r\n        users: state.users.map((el) => {\r\n          if (el.id === action.userId) {\r\n            return { ...el, followed: false };\r\n          }\r\n          return el;\r\n        }),\r\n      };\r\n\r\n    case \"FOLLOWING_IN_PROGRESS\":\r\n      return {\r\n        ...state,\r\n        followingInProgressID: action.followingInProgressID,\r\n      };\r\n    case \"SET_USERS\":\r\n      return {\r\n        ...state,\r\n        users: [...action.users],\r\n      };\r\n\r\n    case \"SET_CURRENT_PAGE_USERS\":\r\n      return {\r\n        ...state,\r\n        currentPageUsers: [...action.currentPageUsers],\r\n      };\r\n\r\n    case \"SET_USERS_AMOUNT\":\r\n      return {\r\n        ...state,\r\n        totalCount: action.totalCount,\r\n      };\r\n\r\n    case \"SET_PAGES_AMOUNT\":\r\n\r\n    \r\n      let buffer = [];\r\n      for (let i = 1; i < action.amountOfPages + 1; i++) {\r\n        buffer.push(i);\r\n      }\r\n\r\n      debugger;\r\n\r\n      return {\r\n        ...state,\r\n        amountOfPages: buffer,\r\n      };\r\n\r\n    case \"SET_CURRENT_PAGE\":\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage,\r\n      };\r\n\r\n    case \"SHOULD_SHOW_LOADER\":\r\n      return {\r\n        ...state,\r\n        showLoader: action.shouldShowLoader,\r\n      };\r\n\r\n    case \"SET_VISIBLE_PAGES\":\r\n\r\n      return {\r\n        ...state,\r\n        visiblePages: action.visiblePages,\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n// Action Creators\r\n\r\nexport const follow = (userId) => ({ type: \"FOLLOW\", userId: userId });\r\nexport const unfollow = (userId) => ({ type: \"UNFOLLOW\", userId: userId });\r\nexport const followingInProgress = (id) => ({\r\n  type: \"FOLLOWING_IN_PROGRESS\",\r\n  followingInProgressID: id,\r\n});\r\n\r\nexport const setUsers = (users) => ({ type: \"SET_USERS\", users: users });\r\n\r\nexport const setCurrentPageUsers = (currentPageUsers) => ({\r\n  type: \"SET_CURRENT_PAGE_USERS\",\r\n  currentPageUsers: currentPageUsers,\r\n});\r\n\r\nexport const setUsersAmount = (amount) => ({\r\n  type: \"SET_USERS_AMOUNT\",\r\n  totalCount: amount,\r\n});\r\nexport const setPagesAmount = (amount) => ({\r\n  type: \"SET_PAGES_AMOUNT\",\r\n  amountOfPages: amount,\r\n});\r\nexport const setCurrentPage = (number) => ({\r\n  type: \"SET_CURRENT_PAGE\",\r\n  currentPage: number,\r\n});\r\n\r\nexport const shouldShowLoader = (shouldShowLoader) => ({\r\n  type: \"SHOULD_SHOW_LOADER\",\r\n  shouldShowLoader: shouldShowLoader,\r\n});\r\n\r\nexport const setVisiblePagesAC = arr => ({type : \"SET_VISIBLE_PAGES\", visiblePages: arr});\r\n\r\n/// SELECTORS\r\n\r\n\r\n// SANKI\r\n\r\nexport const getUsersThunkCreator = () => {\r\n  return async (dispatch) => {\r\n    dispatch(shouldShowLoader(true));\r\n\r\n    const data = await usersAPI.getUsers();\r\n\r\n    dispatch(setUsers(data.items));\r\n    dispatch(setUsersAmount(data.totalCount));\r\n\r\n    let usersPerPage = 100;\r\n    let totalCount = data.totalCount;\r\n    let amountOfPages = Math.ceil(totalCount / usersPerPage);\r\n\r\n    dispatch(setPagesAmount(amountOfPages));\r\n    dispatch(shouldShowLoader(false));\r\n\r\n  };\r\n};\r\n\r\nexport const setCurrentPageThunkCreator = (pageNumber = 0) => async (dispatch) => {\r\n\r\n\r\n\r\n    dispatch(shouldShowLoader(true));\r\n\r\n    const page = !isNaN(pageNumber) == true ? pageNumber : 1;\r\n\r\n\r\n    dispatch(setCurrentPage(page));\r\n\r\n    const data = await usersAPI.getUsers(page);\r\n\r\n    dispatch(setCurrentPageUsers(data.items));\r\n    dispatch(shouldShowLoader(false));\r\n};\r\n\r\nexport const followThunkCreator = (id) => async (dispatch) => {\r\n\r\n  // need to rework\r\n  dispatch(followingInProgress(true));\r\n  const data = await usersAPI.follow(id);\r\n  if (data.resultCode === 0) dispatch(follow(id));\r\n  dispatch(followingInProgress(false));\r\n};\r\n\r\nexport const unfollowThunkCreator = (id) => async (dispatch) => {\r\n    const data = await usersAPI.unFollow(id);\r\n    if (data.resultCode === 0) dispatch(unfollow(id));\r\n};\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Post\":\"Post_Post__xdvZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSummaryError\":\"Login_formSummaryError__1f3pw\"};","\r\nconst Friends = (props) => {\r\n\r\n\r\n\r\n    return (\r\n        <h3>{props.fio}</h3>\r\n    );\r\n};\r\n\r\nexport default Friends;","import { NavLink } from 'react-router-dom';\r\nimport Friends from './Friends/Friends';\r\nimport classes from './Navbar.module.css';\r\n\r\nconst Navbar = (props) => {\r\n\r\n  let friendsList = props.friends.map((el) => <Friends key={el.id} fio={el.fio} />);\r\n\r\n  let navList = props.links.map((el) => {\r\n    return (\r\n      <div className={classes.nav__link}>\r\n        <NavLink  to={el.src} activeClassName={classes.active_link}>\r\n          {el.name}\r\n        </NavLink>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <div>{navList}</div>\r\n\r\n      <div>{friendsList}</div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { connect } from 'react-redux';\r\nimport { sidebarFriendsSL, sidebarLinksSL } from '../../redux/SELECRORS';\r\nimport Navbar from './Navbar';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        friends: sidebarFriendsSL(state),\r\n        links: sidebarLinksSL(state)\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n\r\nexport default NavbarContainer;\r\n","\r\n\r\nimport React from \"react\";\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status : this.props.status\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps, previousState){\r\n\r\n        // без условия будет рекурсия\r\n        if (this.props.status != previousProps.status){\r\n            \r\n            this.setState({\r\n                status: this.props.status\r\n            })\r\n        }\r\n    }\r\n    \r\n    changeInput(event){\r\n        this.setState({\r\n            status : event.target.value\r\n        })\r\n    }\r\n\r\n    toggleFocus = () => {\r\n        \r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    }\r\n\r\n    toggleUnfocus = () => {\r\n\r\n\r\n        this.props.updateStatus(this.state.status);\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                {\r\n                    this.state.editMode ? \r\n                        <div>\r\n                            <input autoFocus={true} onChange={(event)=>this.changeInput(event)} onBlur={()=>this.toggleUnfocus()} value={this.state.status} />\r\n                        </div>\r\n                  :      \r\n                        <div>\r\n                            <span onDoubleClick={()=>this.toggleFocus()}>{this.state.status}</span>\r\n                        </div>\r\n                }\r\n                \r\n              \r\n            </div>\r\n          );\r\n    }\r\n};\r\n\r\nexport default ProfileStatus;\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nconst ProfileStatusWithHooks = props => {\r\n\r\n    /// HOOKS\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(()=>{\r\n     \r\n        console.log(\"NOW\");\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n\r\n    // if (props.status != status){\r\n    //     setStatus(props.status);\r\n    // }\r\n\r\n    const activateEditMode = () => {setEditMode(true)};\r\n\r\n    const deactivateEditMode = () => {\r\n        props.updateStatus(status);\r\n        setEditMode(false);\r\n    };\r\n\r\n\r\n    const inputChange = e => {\r\n        setStatus(e.target.value);\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            {\r\n                editMode ? \r\n                    <div>\r\n                        <input onChange={inputChange} onBlur={deactivateEditMode} value={status} />\r\n                        \r\n                    </div>\r\n              :      \r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode} >{status}</span>\r\n                    </div>\r\n            }\r\n        </div>\r\n      );\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\n\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n\r\n  //let currentUserId = props.location.pathname.replace('/profile/','');\r\n  //setCurrentUserID\r\n\r\n  // {\r\n  //   aboutMe: \"я круто чувак 1001%\",\r\n  //   contacts: {\r\n  //   facebook: \"facebook.com\",\r\n  //   website: null,\r\n  //   vk: \"vk.com/dimych\",\r\n  //   twitter: \"https://twitter.com/@sdf\",\r\n  //   instagram: \"instagra.com/sds\",\r\n  //   youtube: null,\r\n  //   github: \"github.com\",\r\n  //   mainLink: null\r\n  //   },\r\n  //   lookingForAJob: true,\r\n  //   lookingForAJobDescription: \"не ищу, а дурачусь\",\r\n  //   fullName: \"samurai dimych\",\r\n  //   userId: 2,\r\n  //   photos: {\r\n  //   small: \"https://social-network.samuraijs.com/activecontent/images/users/2/user-small.jpg?v=0\",\r\n  //   large: \"https://social-network.samuraijs.com/activecontent/images/users/2/user.jpg?v=0\"\r\n  //   }\r\n  //   }\r\n  \r\n    return (\r\n      <div>\r\n        <div className={classes.content__header}>\r\n          <img\r\n            className={classes.content__avatar}\r\n            // src=\"https://www.izmirankareklam.com/wp-content/uploads/2020/12/1.png\"\r\n            src={props.ProfileInfo.photos?.small}\r\n          ></img>\r\n          <span className={classes.content__author}>\r\n            @{props.ProfileInfo.fullName}\r\n          </span>\r\n        </div>\r\n      <h3>{props.ProfileInfo.aboutMe}</h3>\r\n      <h3>VK - {props.ProfileInfo.contacts?.vk}</h3>\r\n\r\n        <ProfileStatusWithHooks status={props.status}  updateStatus={props.updateStatusTK} getStatus={props.getStatusTK} />\r\n      </div>\r\n    );\r\n  \r\n};\r\n\r\nexport default ProfileInfo;\r\n","import classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return <div className={classes.Post}>{props.msg}</div>;\r\n};\r\n\r\nexport default Post;\r\n","\r\nimport classes from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport React from 'react';\r\nimport Field from \"redux-form/lib/Field\";\r\nimport reduxForm from \"redux-form/lib/reduxForm\";\r\nimport { maxLengthTC, required } from '../../../utils/validators/VALIDATORS';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n  console.log(\"RENDER MY POSTS\");\r\n  \r\n  let postsData = props.state;\r\n  let postsElements = postsData.map( el =>  <Post msg={el.msg}/> );\r\n\r\n\r\n  let storeData = (obj) => {\r\n    props.addPost(obj.textareaData);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.MyPosts}>\r\n      <div className={classes.content__add_post}><h3>ADD POST</h3></div>\r\n      <div className={classes.content__wall}>\r\n        WALL \r\n        <MyPostsFormContainer onSubmit={storeData}/>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nconst lengthValidator = maxLengthTC(10);\r\n\r\nconst MyPostsForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <Field type=\"text\" validate={[required, lengthValidator]} component={Textarea} name=\"textareaData\" placeholder='test'></Field>\r\n      {/* <Field type=\"file\" component=\"input\" name=\"userPhoto\"></Field> */}\r\n      <br />\r\n      <input type=\"submit\" placeholder=\"LOGIN\"/>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst MyPostsFormContainer = reduxForm({\r\n  form: \"postInput\",\r\n  fields: ['textareaData', 'userPhoto']\r\n})(MyPostsForm);\r\n\r\nexport default MyPosts;","\r\nimport { authAPI, profileAPI } from '../API/API';\r\n\r\nlet initialState = {\r\n  profileInfo: {},\r\n  status: \"\",\r\n  currentUserId: null,\r\n\r\n  postsData: [\r\n    { id: 1, likesCount: 34, msg: \"ПРИВЕТ\" },\r\n    { id: 2, likesCount: 63, msg: \"тестовый пост 2\" },\r\n    { id: 3, likesCount: 27, msg: \"Yo\" },\r\n    { id: 4, likesCount: 12, msg: \"пост 4\" },\r\n  ],\r\n};\r\n\r\nconst profileReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case \"ADD-POST\":\r\n\r\n      return {\r\n        ...state,\r\n        currentInputData: \"\",\r\n        postsData: [...state.postsData, { id: 5, msg: action.currentMsg, likesCount: 0 }],\r\n      };\r\n\r\n    case \"DELETE_POST\":\r\n\r\n    let buffer = state.postsData.filter((el,index)=>index!=action.postId);\r\n\r\n    console.log(buffer);\r\n\r\n      return {\r\n        ...state,\r\n        postsData: [...buffer],\r\n    };\r\n\r\n    case \"SET_PROFILE_INFO\":\r\n      return {\r\n        ...state,\r\n        profileInfo: action.profileInfo,\r\n      };\r\n\r\n    case \"SET_CURRENT_USER_ID\":\r\n      return {\r\n        ...state,\r\n        currentUserId: action.currentUserId,\r\n      };\r\n\r\n    case \"SET_STATUS\":\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      }\r\n\r\n    case \"SET_USER_PHOTO\":\r\n\r\n      profileAPI.setImage(action.file);\r\n      return state;\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\n/// ACTION CREATORS\r\n\r\nexport let addPostAC = (currentMsg) => ({ type: \"ADD-POST\", currentMsg });\r\nexport let deletePostAC = (postId) => ({type: \"DELETE_POST\", postId});\r\nexport let setUserPhoto = (file) => ({type : \"SET_USER_PHOTO\", file });\r\nexport let setProfileInfo = (obj) => ({\r\n  type: \"SET_PROFILE_INFO\",\r\n  profileInfo: obj,\r\n});\r\nexport let setCurrentUserID = (number) => ({\r\n  type: \"SET_CURRENT_USER_ID\",\r\n  currentUserId: number,\r\n});\r\nexport let setStatus = (status) => {\r\n  return {\r\n    \r\n  type: \"SET_STATUS\",\r\n  status : status ? status : 'Статус отсутствует'\r\n}}\r\n\r\n\r\n/// SANKI\r\n\r\nexport const getStatusTK = (userID) => async (dispatch) => {\r\n\r\n  const response = await profileAPI.getStatus(userID);\r\n  dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatusTK = (status) => async (dispatch) => {\r\n\r\n  const response = await profileAPI.updateStatus(status);\r\n  if (response.data.resultCode === 0) dispatch(setStatus(status));\r\n}\r\n\r\nexport const profileDidMountThunkCreator = (currentUserId) => async (dispatch) => {\r\n\r\n    let userID =  currentUserId;\r\n\r\n    if (!userID) {\r\n        const res = await authAPI.authMe();\r\n        userID = res.data.id;\r\n    }\r\n   \r\n    const res2 = await profileAPI.getProfileInfo(userID);\r\n    dispatch(setProfileInfo(res2.data));\r\n    getStatusTK(userID);\r\n};\r\n\r\nexport default profileReduser;\r\n","\r\nimport MyPosts from './MyPosts';\r\n\r\nimport { addPostAC, setUserPhoto } from '../../../redux/profileReduser';\r\nimport { connect } from 'react-redux';\r\nimport {profilePostsDataSL} from './../../../redux/SELECRORS';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    state:  profilePostsDataSL(state)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (currentMsg) => {return dispatch(addPostAC(currentMsg))},\r\n    setUserPhoto: (file) => {return dispatch(setUserPhoto(file))}\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","// import classes from './Profile.module.css';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { profileDidMountThunkCreator,  getStatusTK, updateStatusTK } from \"../../redux/profileReduser\";\r\nimport { Redirect, withRouter } from \"react-router\";\r\nimport withAuthRedirect from \"../HOCs/AuthHOC\";\r\nimport { compose } from \"redux\";\r\nimport { profileInfoSL, profileStatusSL } from \"../../redux/SELECRORS\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    \r\n    /// НЕ ДОДЕЛАНО\r\n    let currentUserId = this.props.match.params.USER_ID || 21178;\r\n\r\n    console.log('PC')\r\n    this.props.profileDidMountThunkCreator(currentUserId);\r\n    this.props.getStatusTK(currentUserId);\r\n  }\r\n\r\n  render() {\r\n\r\n    \r\n\r\n    if (this.props.isAuthorised === false){\r\n      return <Redirect to=\"/login\"/>\r\n    } \r\n\r\n    console.log('RENDER PROFILE')\r\n    return (\r\n      <div>\r\n        <ProfileInfo {...this.props}/>\r\n        <MyPostsContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log('mapStateToProps');\r\n  return {\r\n    ProfileInfo: profileInfoSL(state),\r\n    status : profileStatusSL(state)\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, {\r\n    profileDidMountThunkCreator,\r\n    getStatusTK,\r\n    updateStatusTK,\r\n\r\n  }),\r\n  withAuthRedirect\r\n)(ProfileContainer);","import classes from './Header.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n\r\n\r\n  let login = props.props.authData?.login;\r\n\r\n  let logout = () => {\r\n    props.props.logoutMeTC();\r\n  }\r\n\r\n  return (\r\n    <header className={classes.header}>\r\n      <img\r\n        src=\"https://uc20a3d36d20cc7212ef2855648a.previews.dropboxusercontent.com/p/thumb/ABUaDGlLgD6cl4P9ZCFWZ6AOyrHNVKFJxwMpG5RP3YR9iJxX9zail9hNPzi8cFa42tvsdi-9q43ml-NdZzEoZwOWsxhv80ztHS4AeXRi_vax0vavXdTyce-_XhgFA0E1okOsqWVuQePrM7wCB9aLOL6nJZDxSmXcM0cDQ-06AnHI3yFK5kKO4m8lyubMIqYDa75kh7JXUTJyBTzA22hJgB1LktfESvyzC_JX3wNmIKoz8BXgwQcFpENW2LKilb9NWiOs63lt9ZzTz3lr1jXtG1xREhsL8-bNbWXGjak7E-988Sbu_onSUvg8SeCEjlWBYcRwkFb9fOgW3TOS7POXhXkzw8zGvfnW6JZjR3-JrG3G6g/p.jpeg?fv_content=true&size_mode=5\"\r\n        alt=\"img\"\r\n      />\r\n\r\n      { props.props.isAuth === true ? \r\n        <button className={classes.loginBlock} onClick={logout}>\r\n          LOGOUT\r\n        </button> \r\n        : \r\n        <p></p>\r\n        // <NavLink to=\"/login\">\r\n        //   <div className={classes.loginBlock}>\r\n        //     LOGIN\r\n        //   </div>\r\n        // </NavLink>\r\n      }\r\n      \r\n      <div>\r\n      </div>\r\n\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { authAPI } from \"../API/API\";\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nlet initialState = {\r\n  userId: null,\r\n  email: \"\",\r\n  login: \"\",\r\n  isFetching: false,\r\n  authData: {\r\n    email: null,\r\n    id: null,\r\n    login: null\r\n  },\r\n  isAuth: null,\r\n  authStatus: \"You are not authorised\"\r\n};\r\n\r\nconst authReduser = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER_DATA\":\r\n      return {\r\n        ...state,\r\n        ...action.data,\r\n      };\r\n\r\n    case \"SET_AUTH_USER_DATA\":\r\n\r\n      return {\r\n        ...state,\r\n        authData : {...action.authData},\r\n        isAuth : true\r\n      };\r\n\r\n    case \"SET_AUTH_STATUS\":\r\n\r\n      if (action.authStatus === \"You are succsesfully authorised!\"){\r\n        return {\r\n          ...state,\r\n          authStatus : action.authStatus,\r\n          isAuth : true\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        authStatus : action.authStatus\r\n      }\r\n\r\n    case \"LOGOUT\" :\r\n\r\n      return {\r\n        userId: null,\r\n        email: \"\",\r\n        login: \"\",\r\n        isFetching: false,\r\n        authData: {\r\n          email: null,\r\n          id: null,\r\n          login: null\r\n        },\r\n        isAuth: false,\r\n        authStatus: \"You are not authorised\"\r\n      }\r\n    \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n/// ACTION CREATORS\r\n\r\nexport const setAuthStatus = (status) => ({type: \"SET_AUTH_STATUS\", authStatus: status});\r\n\r\nexport let setUserData = (userId, email, login) => ({\r\n  type: \"SET_USER_DATA\",\r\n  data: { userId, email, login },\r\n});\r\n\r\nexport let setAuthUserData = (obj) => ({\r\n  type: \"SET_AUTH_USER_DATA\",\r\n  authData: obj,\r\n  isAuth: true\r\n});\r\n\r\nexport const logoutAC = () => ({type: \"LOGOUT\"});\r\n\r\n/// SANKI\r\n\r\nexport const authMeThunkCreator = () => async (dispatch) => {\r\n  const res = await authAPI.authMe();\r\n  if (res.resultCode == 0){dispatch(setAuthUserData(res.data))};\r\n}\r\n\r\nexport const tryToLoginTC = (login, password, rememberMe) => async (dispatch) => {\r\n\r\n  dispatch(setAuthStatus(\"Wait a second...\"));\r\n  \r\n  setTimeout(async () => {\r\n    const res = await authAPI.tryToLogin(login, password, rememberMe);\r\n    if (res.resultCode === 0){\r\n      dispatch(setAuthStatus(\"You are succsesfully authorised! Redirecting...\"))\r\n      setTimeout(()=>{dispatch(setAuthStatus(\"You are succsesfully authorised!\"))}, 1500)\r\n    } else {\r\n      let action = stopSubmit('login', {_error: res.messages});\r\n      dispatch(action);\r\n      dispatch(setAuthStatus(\"Something went wrong, try again!\"))\r\n    }}, 1000);\r\n}\r\n\r\nexport const logoutMeTC = () => async (dispatch) => {\r\n    const res = await authAPI.logoutMe();\r\n    if (res.resultCode === 0) dispatch(logoutAC());\r\n}\r\n\r\nexport default authReduser;\r\n","\r\n\r\n\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport { setAuthUserData, authMeThunkCreator, logoutMeTC} from \"../../redux/authReduser\";\r\nimport { userIdSL, isAuthSL, authDataSL } from \"../../redux/SELECRORS\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    \r\n    componentDidMount(){\r\n        this.props.authMeThunkCreator();\r\n    }\r\n\r\n    render(){return (<Header props={this.props} />)}\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userId : userIdSL(state),\r\n        isAuth : isAuthSL(state),\r\n        authData : authDataSL(state),\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, {\r\n    setAuthUserData,\r\n    authMeThunkCreator,\r\n    logoutMeTC\r\n}) (HeaderContainer);","\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport Field from \"redux-form/lib/Field\";\r\nimport reduxForm from \"redux-form/lib/reduxForm\";\r\nimport { authStatusSL, isAuthSL } from \"../../redux/SELECRORS\";\r\nimport { required } from \"../../utils/validators/VALIDATORS\";\r\nimport { Input } from \"../common/FormControls/FormControls\";\r\nimport { tryToLoginTC } from './../../redux/authReduser'\r\n\r\nimport c from './Login.module.css';\r\n\r\nlet Login = (props) => {\r\n\r\n\r\n   \r\n\r\n    const allFormData = (obj) => {\r\n     \r\n        props.tryToLoginTC(obj.login, obj.password, obj.rememberMe);\r\n    }\r\n\r\n    if (props.authStatus === 'You are succsesfully authorised!' || props.isAuth === true){\r\n        return <Redirect to=\"/profile\" />;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>\r\n                Login\r\n            </h1>\r\n            <ReduxLoginForm onSubmit={allFormData} />\r\n            <h2>{props.authStatus}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n                <Field type=\"text\" validate={[required]} name=\"login\" placeholder=\"login\" component={Input}/>\r\n                <br />\r\n                <Field type=\"password\" validate={[required]} name=\"password\" placeholder=\"password\" component={Input}/>\r\n                <br />\r\n                <Field type=\"checkbox\" name=\"rememberMe\" component={\"input\"}/> remember me\r\n                <br />\r\n\r\n                {\r\n                    props.error ? (<div className={c.formSummaryError}>\r\n                        {props.error}\r\n                    </div>) : ''\r\n                }\r\n                \r\n                <input type=\"submit\" placeholder=\"LOGIN\"/>\r\n            </form>\r\n    )\r\n}\r\n\r\nlet ReduxLoginForm = reduxForm({ // <----- THIS IS THE IMPORTANT PART!\r\n    form: 'login',                           // a unique name for this form\r\n    fields: ['login', 'password', 'rememberMe'] // all the fields in your form\r\n  })(LoginForm);\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        authStatus : authStatusSL(state),\r\n        isAuth : isAuthSL(state)\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        tryToLoginTC : (login, password, rememberMe) => dispatch(tryToLoginTC(login, password, rememberMe))\r\n    }\r\n}\r\n\r\nconst LoginContainer =  connect(mapStateToProps, mapDispatchToProps)(Login);\r\n\r\nexport default LoginContainer;\r\n","import { authAPI, profileAPI } from \"../API/API\";\r\nimport { authMeThunkCreator, setAuthUserData } from \"./authReduser\";\r\nimport { setProfileInfo, setStatus } from \"./profileReduser\";\r\n\r\n\r\n\r\nlet initialState = {\r\n    \r\n    isUserAuthorised : null,\r\n    userId : null,\r\n    userStatus : '',\r\n\r\n};\r\n  \r\nconst appReduser = (state = initialState, action = {type: \"DEFAULT\"}) => {\r\n\r\n\r\n    switch (action.type){\r\n        case \"SET_AUTHORISATION_STATUS\":\r\n\r\n            return {\r\n                ...state,\r\n                isUserAuthorised : action.status\r\n            }\r\n        case \"SET_INITIALISATING_USER_ID\":\r\n            return {\r\n                ...state,\r\n                userId : action.userId\r\n            }\r\n        case \"SET_INITIALISATING_USER_STATUS\":\r\n            return {\r\n                ...state,\r\n                userStatus : action.userStatus\r\n            }\r\n        case \"DEFAULT\":\r\n          \r\n            return {\r\n                ...state,\r\n            }\r\n    \r\n        default:\r\n            return {\r\n                ...state\r\n            }\r\n    }\r\n};\r\n\r\n/// ACTION CREATORS\r\n\r\nexport const setAuthorisationStatusAC = (status) => {\r\n\r\n    return {\r\n        type: \"SET_AUTHORISATION_STATUS\",\r\n        status : status\r\n    }\r\n}\r\nexport const setInitialisationUserStatus = (userStatus) => {\r\n    return {\r\n        type: \"SET_INITIALISATING_USER_STATUS\",\r\n        userStatus : userStatus\r\n    }\r\n}\r\n\r\nexport const setInitialisatingUserID = (userId) => {\r\n    return {\r\n        type: \"SET_INITIALISATING_USER_ID\",\r\n        userId : userId\r\n    }\r\n}\r\n\r\n\r\n/// SANKI\r\n\r\n\r\nexport const  checkUserAuthorisationTC = () => (dispatch) => {\r\n    \r\n    (async function checkUserAuthorisation() {\r\n        let userID = 0;\r\n        const res = await authAPI.authMe();\r\n\r\n        if (res.resultCode === 0){\r\n                userID = res.data.id;\r\n                dispatch(setInitialisatingUserID(res.data.id));\r\n                dispatch(setAuthUserData(res.data));\r\n        } else {\r\n            dispatch(setAuthorisationStatusAC(false));\r\n        }\r\n        \r\n        const res2 = await profileAPI.getProfileInfo(userID);\r\n        dispatch(setProfileInfo(res2.data));\r\n\r\n        const res3 = await profileAPI.getStatus(userID);\r\n        let userStatus = res3.data;\r\n        dispatch(setStatus(userStatus));\r\n\r\n        dispatch(setAuthorisationStatusAC(true));\r\n    })();\r\n} \r\n\r\nexport default appReduser;\r\n\r\n  ","\r\n\r\nimport React from \"react\"\r\nimport { connect } from \"react-redux\";\r\nimport { userIdSL, userStatusSL } from \"../../redux/SELECRORS\";\r\nimport {checkUserAuthorisationTC} from './../../redux/appReduser';\r\n\r\nclass Initialisation extends React.Component {\r\n\r\n    componentDidMount(){\r\n        this.props.checkUserAuthorisationTC();\r\n    }\r\n\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <h1>ЗАГРУЗКА...</h1>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userId : userIdSL(state),\r\n        userStatus : userStatusSL(state)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {\r\n    checkUserAuthorisationTC,\r\n    \r\n})(Initialisation);","import { Suspense } from \"react\"\r\n\r\n\r\nconst SuspenseHOC = Comp => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <Suspense fallback={<h2>Loading...</h2>}>\r\n                <Comp {...props}/>\r\n            </Suspense>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SuspenseHOC;","import './App.css';\r\nimport { Route, BrowserRouter } from 'react-router-dom';\r\nimport NavbarContainer from './components/Navbar/NavbarContainer';\r\nimport ProfileContainer from './components/Profile/ProfileContainer';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport Login from './components/Login/Login';\r\nimport Initialisation from './components/Initialisation/Initialisation';\r\nimport { connect } from 'react-redux';\r\nimport React from 'react';\r\nimport SuspenseHOC from './components/HOCs/SuspenseHOC';\r\nimport { HashRouter } from 'react-router-dom';\r\n\r\n\r\nconst DialogsContainer = React.lazy(()=>import('./components/Dialogs/DialogsContainer'));\r\nconst TestComp = React.lazy(()=> import('./components/TestComp/TestComp'));\r\nconst UsersContainer = React.lazy(()=> import('./components/Users/UsersContainer'));\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n  renderContent(){\r\n    if (this.props.isUserAuthorised === false || this.props.isUserAuthorised === true){\r\n        return (\r\n          <div className=\"wrapper\">\r\n            <h2>test</h2>\r\n              <HeaderContainer />\r\n              <NavbarContainer />\r\n              <div className=\"content\">\r\n                  <Route\r\n                      path=\"/login\"\r\n                      render={ ()=> <Login/> }\r\n                  />\r\n    \r\n                  <Route \r\n                      path=\"/dialogs\" \r\n                      render={SuspenseHOC(DialogsContainer)} \r\n                  />\r\n\r\n                  <Route \r\n                    path=\"/news\"\r\n                    render={SuspenseHOC(TestComp)}\r\n                  />\r\n                  \r\n                  <Route \r\n                      path=\"/profile/:USER_ID?\" \r\n                      render={ () => \r\n                      <ProfileContainer /> } \r\n                  />\r\n    \r\n                  <Route \r\n                      path=\"/users\" \r\n                      render={SuspenseHOC(UsersContainer)}\r\n    \r\n                  />\r\n              </div>\r\n            </div>\r\n        )\r\n    } else {\r\n      return (\r\n        <Initialisation/>\r\n      )\r\n    }\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <HashRouter basename={ process.env.PUBLIC_URL} >\r\n        <div className=\"App\">\r\n            {\r\n              this.renderContent()\r\n            }\r\n        </div>\r\n      </HashRouter>\r\n    );\r\n  }\r\n  \r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isUserAuthorised: state.app.isUserAuthorised\r\n  }\r\n}\r\n\r\nconst AppContainer = connect(mapStateToProps,{\r\n  \r\n})(App);\r\n\r\nexport default AppContainer;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","let initialState = {\r\n\r\n  \r\n\r\n  friends: [\r\n    { id: 1, fio: 'hh' },\r\n    { id: 2, fio: 'gg' },\r\n    { id: 3, fio: 'ez' },\r\n  ],\r\n\r\n  links: [\r\n    { id: 1, src: '/profile', name: 'Profile' },\r\n    { id: 1, src: '/dialogs', name: 'Messages' },\r\n    { id: 1, src: '/news', name: 'News' },\r\n    { id: 1, src: '/music', name: 'Music' },\r\n    { id: 1, src: '/settings', name: 'Settings' },\r\n    { id: 1, src: '/users', name: 'USERS' },\r\n  ],\r\n};\r\n\r\nconst sidebarReduser = (state = initialState, action) => {\r\n  return state;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default sidebarReduser;\r\n","import {applyMiddleware, combineReducers, compose, createStore} from 'redux';\r\nimport profileReduser from './profileReduser';\r\nimport dialogsReduser from './dialogsReduser';\r\nimport sidebarReduser from './sidebarReduser';\r\nimport { usersReduser } from './usersReduser';\r\nimport authReduser from './authReduser';\r\nimport {reducer as formReducer} from 'redux-form';\r\nimport appReduser from './appReduser';\r\n\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n\r\nlet redusers = combineReducers({\r\n    profilePage : profileReduser,\r\n    messagesPage : dialogsReduser,\r\n    sidebarPage : sidebarReduser,\r\n    users : usersReduser,\r\n    auth : authReduser,\r\n    app : appReduser,\r\n    form : formReducer,\r\n    \r\n});\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; \r\nconst store = createStore(redusers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n//let store = createStore(redusers, applyMiddleware(thunkMiddleware));\r\n\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/REDUX_STORE';\r\nimport StoreContext from './StoreContext';\r\n\r\nimport { Provider } from 'react-redux';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\ndocument.getElementById('root'));\r\n\r\n\r\n// rerenderEntireTree(store.getState());\r\n\r\n// store.subscribe(rerenderEntireTree);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","\r\n\r\nexport const required = (value) => {\r\n\r\n\r\n    if (value){\r\n        return undefined;\r\n    }\r\n    return \"You must write smth...\";\r\n\r\n}\r\n\r\n\r\nexport const loginValidator = (value) => {\r\n    \r\n\r\n    console.log('DA', !isNaN(value.split()[0]))\r\n\r\n    if (value && !isNaN(value.split()[0])){\r\n        return 'First symbol must be not a number...'\r\n    }\r\n\r\n    return undefined;\r\n}\r\n\r\n\r\nexport const maxLengthTC = (length) => (value) => {\r\n    \r\n    if (value && value.length > length){\r\n        return \"Too long...\";\r\n    }\r\n    return undefined;\r\n    \r\n}","\r\nimport classes from './FormControls.module.css';\r\n\r\n\r\nconst FormControl = ({input, meta, ...props}) => {\r\n\r\n    const hasError = meta.error && meta.touched;\r\n\r\n    return (\r\n        <div className={ hasError ? classes.error_textaera : classes.textarea}>\r\n            <div>\r\n                { props.children}\r\n            </div>\r\n            {\r\n                hasError && <span className={classes.error_span}>{meta.error}</span>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps} /></FormControl>\r\n\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, ...restProps} = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /></FormControl>\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3ePQt\",\"active_link\":\"Navbar_active_link__1Yo0a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content__avatar\":\"ProfileInfo_content__avatar__2DjM0\",\"content__author\":\"ProfileInfo_content__author__1_D9R\",\"content\":\"ProfileInfo_content__1hAH4\",\"content__header\":\"ProfileInfo_content__header__60Cv9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MyPosts\":\"MyPosts_MyPosts__1hMTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textarea\":\"FormControls_textarea__PtU1o\",\"error_textaera\":\"FormControls_error_textaera__27FU7\",\"error_span\":\"FormControls_error_span__Tj4Tb\"};","import { createSelector } from \"reselect\";\r\n\r\n\r\n/// users\r\n\r\nexport const usersGet = state => state.users.users;\r\nexport const totalCountSL = state => state.users.totalCount;\r\nexport const usersPerPageSL = state => state.users.usersPerPage;\r\nexport const amountOfPagesSL = state => state.users.amountOfPages;\r\nexport const currentPageSL = state => state.users.currentPage;\r\nexport const currentPageUsersSL = state => state.users.currentPageUsers;\r\nexport const showLoaderSL = state => state.users.showLoader;\r\nexport const followingInProgressIDSL = state => state.users.followingInProgressID;\r\n\r\nexport const visiblePagesSL = state => state.users.visiblePages;\r\n\r\nexport const usersGetSuperSL =  createSelector( usersGet, showLoaderSL , (users, showLoader) => {\r\n  if (showLoader){ return users.filter(el=>true); }\r\n})\r\n\r\n/// app\r\n\r\nexport const userIdSL = state => state.app.userId;\r\nexport const userStatusSL = state => state.app.userStatus;\r\n\r\n/// auth\r\n\r\nexport const authStatusSL = state => state.auth.authStatus;\r\nexport const isAuthSL = state => state.auth.isAuth;\r\nexport const authDataSL = state => state.auth.authData;\r\n\r\n/// profile\r\n\r\nexport const profileInfoSL = state => state.profilePage.profileInfo;\r\nexport const profileStatusSL = state => state.profilePage.status;\r\nexport const profilePostsDataSL = state => state.profilePage.postsData;\r\n\r\n\r\n/// sidebar\r\n\r\nexport const sidebarFriendsSL = state => state.sidebarPage.friends;\r\nexport const sidebarLinksSL = state => state.sidebarPage.links;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__28JW9\",\"loginBlock\":\"Header_loginBlock__4N43Q\"};","\r\nimport { Redirect } from \"react-router\";\r\nimport React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { isAuthSL } from \"../../redux/SELECRORS\";\r\n\r\nconst mapStateToPropsAuth = (state) => {\r\n    return {\r\n        isAuthorised: isAuthSL(state)\r\n    };\r\n};\r\n\r\nlet withAuthRedirect = (Component) => {\r\n\r\n    class WrapperContainer extends React.Component {\r\n        render() {\r\n            return this.props.isAuthorised ? <Component {...this.props} /> : <Redirect to=\"/login\" /> \r\n        }\r\n    }\r\n    let withAuthRedirectConnected = connect(mapStateToPropsAuth)(WrapperContainer);\r\n    return withAuthRedirectConnected;\r\n}\r\n\r\nexport default withAuthRedirect;","import axios from \"axios\";\r\n\r\nconst API_KEY = \"f4483cfc-efef-4572-802e-24fa17f34d79\";\r\nconst BASE_URL = \"https://social-network.samuraijs.com/api/1.0/\";\r\n// в рамках учебного проекта оставляю этот файл открытым\r\n\r\n\r\nconst axiosInstance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: BASE_URL,\r\n    headers: {\r\n        \"API-KEY\": API_KEY,\r\n    },\r\n});\r\n \r\n\r\nexport const authAPI = {\r\n    authMe(){\r\n        return axiosInstance.get(\"auth/me\").then((res)=>res.data);\r\n    },\r\n\r\n    tryToLogin(login, password, rememberMe){\r\n        return axiosInstance.post(\"auth/login\", {\r\n            email: login,\r\n            password : password,\r\n            rememberMe : rememberMe\r\n        }).then((res)=>{\r\n            return res.data;\r\n        })\r\n    },\r\n\r\n    logoutMe(){\r\n        return axiosInstance.delete(\"auth/login\")\r\n            .then((res)=>{\r\n                return res.data;\r\n        });\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfileInfo(id){\r\n        return axiosInstance.get('profile/'+ id)\r\n    },\r\n    getStatus(id){\r\n        return axiosInstance.get('profile/status/' + id);\r\n    },\r\n    updateStatus(status){\r\n        return axiosInstance.put('profile/status', {status: status});\r\n    },\r\n\r\n    setImage(file){\r\n        // not completed\r\n        return axiosInstance.put('profile/photo', {image: file});\r\n    }\r\n}\r\n\r\nexport const usersAPI = {\r\n    getUsers(pageNumber = 1){\r\n        return axiosInstance.get(\"users?count=100&page=\" + pageNumber).then((res)=>res.data);\r\n    },\r\n    \r\n    follow(userId){\r\n        return axiosInstance.post(\"follow/\" + userId).then((res)=>res.data);\r\n    },\r\n\r\n    unFollow(userId){\r\n        return axiosInstance.delete(\"follow/\" + userId).then((res)=>res.data);\r\n    }\r\n}"],"sourceRoot":""}